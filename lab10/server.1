Script started on 2021-03-25 15:42:17-0400
]0;zhaoti76@wolf:/h/u17/c9/00/zhaoti76/zhaoti76/lab10wolf:~/zhaoti76/lab10$ gdb bufserver
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break set_up_server_socket
Breakpoint 1 at 0xf64: file socket.c, line 35.
(gdb) next
The program is not being run.
(gdb) run
Starting program: /h/u17/c9/00/zhaoti76/zhaoti76/lab10/bufserver 

Breakpoint 1, set_up_server_socket (self=0x555555757260, num_queue=5)
    at socket.c:35
35      int set_up_server_socket(struct sockaddr_in *self, int num_queue) {
(gdb) next
36          int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) 
37          if (soc < 0) {
(gdb) 
44          int on = 1;
(gdb) 
45          int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) 
47          if (status < 0) {
(gdb) 
53          if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) next
60          if (listen(soc, num_queue) < 0) {
(gdb) ne[K[K
66          return soc;
(gdb) 
67      }
(gdb) 
main () at bufserver.c:27
27              int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...
New connection accepted from 127.0.0.1:52356
28              if (fd < 0) {
(gdb) next
33              char buf[BUFSIZE] = {'\0'};
(gdb) 
34              int inbuf = 0;           // How many bytes currently in buffer?
(gdb) 
35              int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) 
36              char *after = buf;       // Pointer to position after the data in buf
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf = inbuf + nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where-2] = '\0';
(gdb) 
59                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69                      inbuf = inbuf - where;
(gdb) 
70                      memmove(&buf, &buf[where], inbuf);
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
76                  room = room - inbuf;
(gdb) 
77                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf = inbuf + nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where-2] = '\0';
(gdb) 
59                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69                      inbuf = inbuf - where;
(gdb) 
70                      memmove(&buf, &buf[where], inbuf);
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
76                  room = room - inbuf;
(gdb) 
77                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf = inbuf + nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where-2] = '\0';
(gdb) 
59                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69                      inbuf = inbuf - where;
(gdb) 
70                      memmove(&buf, &buf[where], inbuf);
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
76                  room = room - inbuf;
(gdb) 
77                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf = inbuf + nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
76                  room = room - inbuf;
(gdb) 
77                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
81              close(fd);
(gdb) 
82              printf("The connection is now closed ...\n");
(gdb) 
The connection is now closed ...
27              int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...
exit
quit
^C
Program received signal SIGINT, Interrupt.
0x00007ffff7b04674 in __libc_accept (fd=3, addr=..., len=0x7fffffffe8c8)
    at ../sysdeps/unix/sysv/linux/accept.c:26
26      ../sysdeps/unix/sysv/linux/accept.c: No such file or directory.
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

        Inferior 1 [process 18015] will be killed.

Quit anyway? (y or n) y
]0;zhaoti76@wolf:/h/u17/c9/00/zhaoti76/zhaoti76/lab10wolf:~/zhaoti76/lab10$ exit
exit

Script done on 2021-03-25 15:47:06-0400
